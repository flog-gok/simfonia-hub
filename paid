local Config = {
    Name = "CheatSelectionMenu",
    TridentGameId = 117289497495248,
    Scripts = {
        {
            Name = "Simfonia Free",
            Url = "https://raw.githubusercontent.com/flog-gok/simfonia-hub/refs/heads/main/Simfonia.hub%20FREE",
            Tag = "FREE",
            Color = Color3.fromRGB(150, 150, 150),
            Description = "> Basic features\n> Stable performance\n> Regular updates"
        },
        {
            Name = "Simfonia Paid",
            Url = "https://raw.githubusercontent.com/flog-gok/simfonia-hub/refs/heads/main/simfonia.hub%20paid",
            Tag = "PAID",
            Color = Color3.fromRGB(255, 255, 0),
            Description = "> Premium features\n> Enhanced performance\n> Exclusive modules"
        },
        {
            Name = "Trident Hack",
            Url = "https://raw.githubusercontent.com/flog-gok/simfonia-hub/refs/heads/main/simfonia.hub%20(trident)%20%24%24%24%20v",
            Tag = "",
            Color = Color3.fromRGB(255, 255, 255),
            Description = "> Added View Model\n> Improved stability\n> Fixed minor bugs",
            GameId = 117289497495248
        },
        {
            Name = "Simfonia Craftblox",
            Url = "https://raw.githubusercontent.com/flog-gok/simfonia-hub/refs/heads/main/simfonia%20craftblox%20client",
            Tag = "CRAFTBLOX",
            Color = Color3.fromRGB(100, 200, 100),
            Description = "> Craftblox-specific features\n> Enhanced gameplay\n> Game-specific optimizations",
            GameId = 115885522198635
        }
    }
}

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local PlaceId = game.PlaceId

-- Destroy existing GUI if it exists
if CoreGui:FindFirstChild(Config.Name) then
    CoreGui[Config.Name]:Destroy()
end

-- Create main ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = Config.Name
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = CoreGui

-- Create main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 600, 0, 400)
MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 30, 50)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Add corner radius to main frame
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- Create divider line
local Divider = Instance.new("Frame")
Divider.Size = UDim2.new(0, 2, 0, 360)
Divider.Position = UDim2.new(0, 150, 0, 20)
Divider.BackgroundColor3 = Color3.fromRGB(60, 80, 120)
Divider.BorderSizePixel = 0
Divider.Parent = MainFrame

-- Create button container
local ButtonContainer = Instance.new("Frame")
ButtonContainer.Size = UDim2.new(0, 140, 0, 360)
ButtonContainer.Position = UDim2.new(0, 5, 0, 20)
ButtonContainer.BackgroundTransparency = 1
ButtonContainer.Parent = MainFrame

local Buttons = {}

-- Create buttons for each script option
for index, option in ipairs(Config.Scripts) do
    -- Skip scripts with specific game IDs if not in the correct game
    if option.GameId and option.GameId ~= PlaceId then
        continue
    end

    local Button = Instance.new("TextButton")
    Button.Text = option.Name
    Button.Size = UDim2.new(0, 130, 0, 40)
    Button.Position = UDim2.new(0, 5, 0, 5 + (#Buttons * 50))
    Button.Font = Enum.Font.GothamBold
    Button.TextSize = 14
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.BackgroundColor3 = Color3.fromRGB(0, 140, 255)
    Button.Parent = ButtonContainer

    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 8)
    ButtonCorner.Parent = Button

    local TagLabel = Instance.new("TextLabel")
    TagLabel.Text = option.Tag
    TagLabel.Size = UDim2.new(0, 40, 0, 20)
    TagLabel.Position = UDim2.new(1, -45, 0, 10)
    TagLabel.Font = Enum.Font.Gotham
    TagLabel.TextSize = 12
    TagLabel.TextColor3 = option.Color
    TagLabel.BackgroundTransparency = 1
    TagLabel.Parent = Button

    table.insert(Buttons, {
        Button = Button,
        Url = option.Url,
        Description = option.Description
    })
end

-- Create description container
local DescriptionContainer = Instance.new("Frame")
DescriptionContainer.Size = UDim2.new(0, 400, 0, 360)
DescriptionContainer.Position = UDim2.new(0, 160, 0, 20)
DescriptionContainer.BackgroundTransparency = 1
DescriptionContainer.Parent = MainFrame

-- Create title label
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Text = ""
TitleLabel.Size = UDim2.new(0, 380, 0, 30)
TitleLabel.Position = UDim2.new(0, 10, 0, 10)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextSize = 16
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.BackgroundTransparency = 1
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.Parent = DescriptionContainer

-- Create description label
local DescriptionLabel = Instance.new("TextLabel")
DescriptionLabel.Text = ""
DescriptionLabel.Size = UDim2.new(0, 380, 0, 100)
DescriptionLabel.Position = UDim2.new(0, 10, 0, 50)
DescriptionLabel.Font = Enum.Font.Gotham
DescriptionLabel.TextSize = 14
DescriptionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
DescriptionLabel.BackgroundTransparency = 1
DescriptionLabel.TextXAlignment = Enum.TextXAlignment.Left
DescriptionLabel.TextYAlignment = Enum.TextYAlignment.Top
DescriptionLabel.TextWrapped = true
DescriptionLabel.Parent = DescriptionContainer

-- Create load button
local LoadButton = Instance.new("TextButton")
LoadButton.Text = "Load"
LoadButton.Size = UDim2.new(0, 100, 0, 40)
LoadButton.Position = UDim2.new(0, 10, 0, 160)
LoadButton.Font = Enum.Font.GothamBold
LoadButton.TextSize = 16
LoadButton.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadButton.BackgroundColor3 = Color3.fromRGB(0, 140, 255)
LoadButton.Visible = false
LoadButton.Parent = DescriptionContainer

local LoadButtonCorner = Instance.new("UICorner")
LoadButtonCorner.CornerRadius = UDim.new(0, 8)
LoadButtonCorner.Parent = LoadButton

-- Create error label
local ErrorLabel = Instance.new("TextLabel")
ErrorLabel.Text = ""
ErrorLabel.Size = UDim2.new(0, 580, 0, 30)
ErrorLabel.Position = UDim2.new(0.5, -290, 0, 360)
ErrorLabel.Font = Enum.Font.Gotham
ErrorLabel.TextSize = 14
ErrorLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
ErrorLabel.BackgroundTransparency = 1
ErrorLabel.TextWrapped = true
ErrorLabel.Parent = MainFrame

local SelectedUrl = ""

-- Fade out animation
local function FadeOut()
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
    local mainTween = TweenService:Create(MainFrame, tweenInfo, {BackgroundTransparency = 1})

    for _, descendant in pairs(MainFrame:GetDescendants()) do
        if descendant:IsA("GuiObject") then
            if descendant:IsA("TextLabel") or descendant:IsA("TextButton") then
                TweenService:Create(descendant, tweenInfo, {TextTransparency = 1, BackgroundTransparency = 1}):Play()
            elseif descendant:IsA("Frame") and descendant ~= Divider then
                TweenService:Create(descendant, tweenInfo, {BackgroundTransparency = 1}):Play()
            end
        end
    end

    TweenService:Create(Divider, tweenInfo, {BackgroundTransparency = 1}):Play()
    mainTween:Play()
    mainTween.Completed:Connect(function()
        ScreenGui:Destroy()
    end)
end

-- Load script function
local function LoadScript(url)
    local success, errorMsg = pcall(function()
        local script = game:HttpGet(url, true)
        loadstring(script)()
    end)

    if success then
        FadeOut()
    else
        ErrorLabel.Text = "‚ùå Error: " .. tostring(errorMsg)
    end
end

-- Button click handlers
for _, buttonData in pairs(Buttons) do
    buttonData.Button.MouseButton1Click:Connect(function()
        TitleLabel.Text = buttonData.Button.Text
        DescriptionLabel.Text = buttonData.Description
        LoadButton.Visible = true
        SelectedUrl = buttonData.Url
    end)
end

-- Load button handler
LoadButton.MouseButton1Click:Connect(function()
    if SelectedUrl ~= "" then
        LoadScript(SelectedUrl)
    end
end)

-- Escape key handler
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.Escape and not gameProcessed then
        FadeOut()
    end
end)
